#!/bin/bash

source ~/.git-completion.bash
source ~/.git-prompt.sh

BLACK="\[\033[0;30m\]"
MAGENTA="\[\033[0;35m\]"
YELLOW="\[\033[0;33m\]"
BLUE="\[\033[34m\]"
LIGHT_GRAY="\[\033[0;37m\]"
CYAN="\[\033[0;36m\]"
GREEN="\[\033[0;32m\]"
DEFAULT="\[\033[0;0m\]"
GIT_PS1_SHOWDIRTYSTATE=true
export LS_OPTIONS='--color=auto'
export CLICOLOR='Yes'
export LSCOLORS=gxfxbEaEBxxEhEhBaDaCaD

export PS1=$YELLOW"\u@\h"'$(
    if [[ $(__git_ps1) =~ \*\)$ ]]
    # a file has been modified but not added
    then echo "'$CYAN'"$(__git_ps1 " (%s)")
    elif [[ $(__git_ps1) =~ \+\)$ ]]
    # a file has been added, but not commited
    then echo "'$CYAN'"$(__git_ps1 " (%s)")
    # the state is clean, changes are commited
    else echo "'$CYAN'"$(__git_ps1 " (%s)")
    fi)'$BLUE" \W"$DEFAULT": "

alias ll='ls -lah'
alias gg='git status -s'

# Autocomplete in sudo
complete -cf sudo
complete -cf which

# CCache
export USE_CCACHE=1
export CCACHE_DIR=~/ccache
mkdir -p $CCACHE_DIR
/usr/bin/ccache -M 20G
export JAVA_HOME=`which java | xargs readlink -f | sed 's|/bin/java||'`
export JUNIT_HOME=~/tools/junit/junit-4.10.jar

function gstart() {
  if [ -z "$1" ]; then
    echo "Usage: $0 <branch_name> [remote]"
    return 1
  fi
  git checkout -b $1
  if [ $? -ne 0 ]; then
    echo "Branch $1 already exists"
    return 1
  fi
  if [ ! -z "$2" ]; then
    remote="$2"
  else
    remote=`git remote`
    if [ `echo $remote | wc -w` -ne 1 ]; then
      echo "Ambiguous remote, found $remote"
      echo "Usage: $0 <branch_name> [remote]"
      git checkout develop
      git branch -D $1
      return 1
    fi
  fi
  git push -u $remote $1
  if [ $? -ne 0 ]; then
    echo "Failed to set remote branch $remote/$1"
    git checkout develop
    git branch -D $1
    return 1
  fi
}
